name: CI
on:
   push:
     branches: [ "master" ]
   pull_request:
     branches: [ "master" ]

jobs:
   build:
     runs-on: ubuntu-latest
     strategy:
      matrix:
        dotnet-version: [ "5.0.x" ]

     steps:
        - uses: actions/checkout@v3
        - name: Setup dotnet
          uses: actions/setup-dotnet@v2
          with:
            dotnet-version: ${{ matrix.dotnet-version }}
        - name: Install dependencies
          run: dotnet restore
          
        - name: Test with dotnet
          run: dotnet test --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
          
        - name: Upload dotnet test results
          uses: actions/upload-artifact@v3
          with:
            name: dotnet-results-${{ matrix.dotnet-version }}
            path: TestResults-${{ matrix.dotnet-version }}
          # Use always() to always run this step to publish test results when there are test failures
          if: ${{ always() }}
     
     # Set variables 
        - name: Set variables
          if: ${{failure()}}
          run: |
           export VER="$(cat ${{github.workspace}}/${{env.file_name}})"
           echo "VER=$VER" >> $GITHUB_ENV
         
     # notify by slack    
        - name: Notification Slack
        - uses: actions-ecosystem/action-slack-notifier@v1
          with:
             slack_token: ${{ secrets.SLACK_WEBHOOK_URL }}
             message: |
               @${{ github.actor }} pushed commits.
             channel: pocdotnet
        
#           uses: rtCamp/action-slack-notify@v2
#           if: ${{failure()}}
#           env:
#            SLACK_CHANNEL: pocdotnet
#            SLACK_COLOR: ${{ job.status }}
#            SLACK_ICON: https://avatars.slack-edge.com/2021-01-27/1681964022883_e2b796f58399d6ab552f_512.jpg
#            SLACK_TITLE: '${{ job.status }}'
#            SLACK_MESSAGE: '${{ github.event.pull_request.html_url || github.event.head_commit.url }}'
#            SLACK_USERNAME: Poc_Teste_Integrado
#            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
